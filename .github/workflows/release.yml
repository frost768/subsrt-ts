name: Release assets

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js Environment
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
    - name: Install dependencies
      run: yarn
    - name: Build package
      run: yarn build
    - name: Run tests
      run: yarn test
    - name: Extract version
      id: extract_version
      uses: Saionaro/extract-package-version@v1.2.1
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        release_name: v${{ steps.extract_version.outputs.version }}
        draft: false
        prerelease: false
    - name: Create release tarball
      run: |
        mkdir subsrt-ts
        cp -r bin dist README.md LICENSE app.js package.json subsrt-ts
        tar -czf build.tar.gz subsrt-ts
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build.tar.gz
        asset_name: build.tar.gz
        asset_content_type: application/gzip
